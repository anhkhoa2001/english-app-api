version: '3'
services:
  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.4.13
    ports:
      - "2181:2181"

  kafka:
    container_name: kafka
    image: bitnami/kafka:2.2.1-ol-7-r34
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    depends_on:
      - zookeeper
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: khoadt
      MONGO_INITDB_ROOT_PASSWORD: 1
    volumes:
      - database:/var/lib/mongo
  mysql:
    image: "mysql:8.0"
    environment:
      MYSQL_ROOT_PASSWORD: 1
      MYSQL_USER: khoadt
      MYSQL_PASSWORD: 1
    ports:
      - 3306:3306
    volumes:
      - database:/var/bin/mysql
  postgresql:
    image: "postgres:13.1"
    environment:
      POSTGRES_USER: khoadt
      POSTGRES_PASSWORD: 1
    ports:
      - 5432:5432
    volumes:
      - database:/var/bin/postgresql
  redis:
    container_name: dxg-redis
    image: redis:6.2.5
    ports:
      - '6379:6379'

volumes:
  zookeeper-data:
  kafka-data:
  database:
